{
	"name": "df_load_ALBUM_DIM",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "chinook_ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "AlbumDIM"
				},
				{
					"dataset": {
						"referenceName": "chinook_ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "sourceAlbumDIM"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "chinook_ds_snowflake",
						"type": "DatasetReference"
					},
					"name": "sinkAlbumDIM"
				}
			],
			"transformations": [
				{
					"name": "joinSourceTgt"
				},
				{
					"name": "AlbumKey"
				},
				{
					"name": "RowChanges"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AlbumId as decimal(38,0),",
				"          Title as string,",
				"          ArtistId as decimal(38,0),",
				"          Created_By as string,",
				"          Created_Dt as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> AlbumDIM",
				"source(output(",
				"          ALBUM_KEY as decimal(10,0),",
				"          ALBUM_ID as decimal(10,0),",
				"          TITLE as string,",
				"          ARTIST_ID as decimal(10,0),",
				"          SOURCE_ID as string,",
				"          DATE_TO_WAREHOUSE as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceAlbumDIM",
				"AlbumDIM, sourceAlbumDIM join(AlbumId == ALBUM_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinSourceTgt",
				"joinSourceTgt keyGenerate(output(Album_Key as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> AlbumKey",
				"AlbumKey alterRow(updateIf(AlbumId==ALBUM_ID&&AlbumDIM@Title!=sourceAlbumDIM@TITLE&&ArtistId!=ARTIST_ID),",
				"     insertIf(iifNull(ALBUM_ID,0,ALBUM_ID)==0)) ~> RowChanges",
				"RowChanges sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['ALBUM_ID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ALBUM_KEY = AlbumKey@Album_Key,",
				"          ALBUM_ID = AlbumId,",
				"          TITLE = AlbumDIM@Title,",
				"          ARTIST_ID = ArtistId,",
				"          SOURCE_ID = Created_By,",
				"          DATE_TO_WAREHOUSE = Created_Dt",
				"     )) ~> sinkAlbumDIM"
			]
		}
	}
}